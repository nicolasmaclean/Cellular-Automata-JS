*
{
    font-family: 'Ubuntu Mono', monospace;
    background-color: var(--background);
}

h1, h2, h3, p, button
{
    color: var(--text)
}

:root
{
    --background: white;
    --text: black;
    /* --background: black;
    --text: white; */

    --gridBg: rgb(192, 192, 192);
    --pause: rgb(252, 141, 93);
    --play: rgb(159, 252, 93);
    --turq: rgb(93, 252, 207);
    --purple: rgb(212, 93, 252);
    --pink: rgb(252, 93, 191);
    --yellow: rgb(252, 239, 99);
    --blue: rgb(93, 225, 252);
    --mint: rgb(93, 252, 125);

}

.flexRow
{
    display: flex;
    flex-direction: row;
    justify-content: center;
}

.flexCol
{
    display:flex;
    flex-direction: column;
    justify-content: top;
    align-items: center;
}

.wholeDeal
{
    margin-top: 6%;
}

/* Cellular Automata Canvas */
.glCanvas
{
    align-self: center;
}

/* css grid */
.grid
{
    display: grid;
    grid-template-columns: 40% 60%;
    grid-template-rows: 1fr 1fr 1fr 1fr;
}

/* Transparent gridBg, bordered button */
.button
{
    font-size: 1.7em;
    padding: .15em .5em .25em .5em;
    border-radius: 4px;
    margin: .5em .2em .1em .2em;
    
    border-style: solid;
    border-color: var(--turq);
    background-color: transparent;
    transition: background-color .5s;
    justify-self: center;

    height: 1.5em;
}

.button:hover
{
    background-color: var(--turq);
}

/* fade in */
.fade
{
    transition: opacity .5s;
}

.fade:disabled
{
    opacity: 0;
    visibility: hidden;
}

.fade:enabled
{
    opacity: 1;
    visibility: visible;
}

/* Paused and Playing states for button */
.button.Playing, .button.Paused
{
    width: 5em;
}

.button.Playing
{
    border-color: var(--play);
}

.button.Playing:hover
{
    background-color: var(--play);
}

.button.Paused
{
    border-color: var(--pause);
}

.button.Paused:hover
{
    background-color: var(--pause);
}

/* cell state stuff */
.statePicker
{
    margin-top: 1.25em;
    justify-content: stretch;
    grid-column: 1;
    grid-row: span 50;
}

.cellStateBackground
{
    width: 2.5em;
    height: 2em;
    border: 2px;
    border-style: solid;
    border-color: var(--gridBg);
    cursor:pointer
}

.cellStateName
{
    margin-top: .2em;
}

/* grid input div */
.gridInput
{
    width: 35em;
}

.title
{
    text-align: center;
}

.onePaddingLeft
{
    padding-left: 1.2em;
}

.contentLeft
{
    padding-left: .85em;
    justify-content: left;
}

/* move and draw toggle */
.Move
{
    border-color: var(--yellow);
}

.Move:hover
{
    background-color: var(--yellow);
}

.Draw
{
    border-color: var(--purple);
}

.Draw:hover
{
    background-color: var(--purple);
}

.button.clear
{
    border-color: var(--pink);
}

.button.clear:hover
{
    background-color: var(--pink);
}

.button.save
{
    border-color: var(--mint);
}

.button.save:hover
{
    background-color: var(--mint);
}

.button.load
{
    border-color: var(--blue);
}

.button.load:hover
{
    background-color: var(--blue);
}

/* save file upload */
input.file
{
    display: none;
}

.arrowButton
{
    height: 0;
    width: 0;
    margin-top: 2em;
    margin-left: 1em;
    
    border-left: 15px solid var(--text);
    border-right: 15px solid var(--background);
    border-top: 15px solid  var(--background);
    border-bottom: 15px solid  var(--background);

    cursor: pointer;
}